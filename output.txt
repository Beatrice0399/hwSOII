ÄAb
Modulo.          Progetto       la  distanza in caratteri       ogni  funzione commentare
(Homework).                     tra  una colonna di testo       le  linee  di  codice pi√π
                                e l‚Äôaltra.                      importanti;   fornire  un
L‚Äôobiettivo             √®                                       makefile   per  compilare
implementare           un       Dati    in    uscita    e       il    progetto   con   un
programma      C      che       requisiti:   un  file  di       semplice   make;  fornire
trasformi   un  testo  in       testo   ASCII  contenente       un  file  di testo README
italiano  da  una colonna       il    testo    di   input       con       una       breve
a   pi√π  colonne  su  pi√π       incolonnato  e impaginato       spiegazione    dei   file
pagine  (come  ad es. per       secondo    i    parametri       inclusi    e   un   breve
una       pagina       di       espressi  dall‚Äôutente. Le       manuale     utente;    la
quotidiano).         Sono       pagine    sono   separate       versione   multi-processo
richieste   due  versioni       dalla   stringa  ‚Äú\n  %%%       del    programma    dovr√†
del   programma:   una  a       \n‚Äù;   ogni  paragrafo  √®       essere    costituita   da
singolo  processo  e  una       separato   da  una  linea       almeno    tre    processi
multi-processo        con       vuota;  la  prima colonna       concorrenti            ed
almeno    tre    processi       di  testo  √®  a sinistra;       intercomunicanti:     uno
concorrenti.                    tutte  le  righe,  tranne       per  leggere  il  file di
                                l‚Äôultima,     di     ogni       ingresso,  uno per creare
Dati    in   ingresso   e       paragrafo        dovranno       le   colonne,  ed  infine
requisiti:   un  file  di       essere    allineate    ad       uno  per la scrittura del
testo     in     codifica       entrambi  i margini della       file      di      output.
Unicode           (UTF-8)       colonna;   l‚Äôultima  riga       (Ulteriori   suddivisioni
contenente  un  testo  in       di  ogni paragrafo √® solo       del  carico  di lavoro in
italiano  strutturato  in       allineata  a sinistra; le       pi√π  di tre processi sono
paragrafi   separati   da       parole   in   una   linea       ammesse.)  NON  √® ammesso
una  o  pi√π  linee  vuote       dovranno  essere separate       l‚Äôuso     di     librerie
(stringa  contenente solo       da  almeno  un  carattere       esterne  con funzioni per
il  carattere ‚Äò\n‚Äô). Ogni       di       spazio;       la       la    manipolazione    di
paragrafo   √®  costituito       sillabazione           di       stringhe  o testo che non
da  una  o  pi√π  stringhe       eventuali  parole  troppo       siano   quelle   standard
terminate   da  ‚Äò\n‚Äô  (il       lunghe non √® necessaria.        del   C.   Eccezione:   √®
testo   in   ingresso   √®                                       ammesso      l‚Äôuso     di
tutto    su    una   sola       Requisiti   generali  del       librerie    esterne   per
colonna);  il  numero  di       progetto:    ogni    file       l‚Äôanalisi  delle  opzioni
colonne   per  pagina  su       .c/.h  dovr√†  essere  ben       della  linea  di  comando
cui     distribuire    il       commentato:    per   ogni       per il vostro programma. 
testo;   il   numero   di       funzione       commentare                                
linee  per  ogni colonna;       brevemente   i  parametri       Suggerimenti:  usare nomi
larghezza     di     ogni       di  ingresso/uscita  e il       di  variabili  e funzioni
colonna     (numero    di       suo         funzionamento       corrispondenti   al  loro

%%%

significato/utilizzo;           segue:   correttezza  del       
usare  stdin e stdout per       programma         (3/30);       
rispettivamente  il testo       architettura          del       
in  ingresso e in uscita;       programma    e   commenti       
sviluppare    prima    la       (2/30);    usabilit√†    e       
versiosne   mono-processo       istruzioni         utente       
del     programma,    poi       (1/30).                         
quella    multi-processo;       
per    l‚Äôanalisi    della       
linea   di   comando   si       
consiglia  getopt, di uso       
molto  semplice  e che fa       
parte  della libreria GNU       
standard      del      C;       
concentratevi       prima       
sulla   correttezza   dei       
programmi,           cio√®       
assicuratevi    con   pi√π       
testi   di  input  che  i       
programmi   producano  un       
output        incolonnato       
secondo  le richieste. Se       
avete  tempo  alla  fine,       
ottimizzate   il   codice       
per  uso  di CPU e/o RAM,       
mantenendone           la       
correttezza;       potete       
usare  wc  per verificare       
che   il   numero   delle       
parole  in  ingresso e in       
uscita     dei     vostri       
programmi  sia  lo stesso       
(usando  stdin  e  stdout       
nel   vostri   programmi,       
questo  semplice  test si       
riduce  ad una sola linea       
di       comando      con       
l‚Äôoperatore  pipe | della       
shell).                         
                                
Il  punteggio  massimo  √®       
6/30,   articolato   come       
