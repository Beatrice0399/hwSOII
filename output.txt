†N´
Modulo.          Progetto       colonne   per  pagina  su       di       spazio;       la
(Homework).                     cui     distribuire    il       sillabazione           di
                                testo;   il   numero   di       eventuali  parole  troppo
L‚Äôobiettivo             √®       linee  per  ogni colonna;       lunghe non √® necessaria. 
implementare           un       larghezza     di     ogni                                
programma      C      che       colonna     (numero    di       Requisiti   generali  del
trasformi   un  testo  in       caratteri  per  colonna);       progetto:    ogni    file
italiano  da  una colonna       la  distanza in caratteri       .c/.h  dovr√†  essere  ben
a   pi√π  colonne  su  pi√π       tra  una colonna di testo       commentato:    per   ogni
pagine  (come  ad es. per       e l‚Äôaltra.                      funzione       commentare
una       pagina       di                                       brevemente   i  parametri
quotidiano).         Sono       Dati    in    uscita    e       di  ingresso/uscita  e il
richieste   due  versioni       requisiti:   un  file  di       suo         funzionamento
del   programma:   una  a       testo   ASCII  contenente       generale;  nel  corpo  di
singolo  processo  e  una       il    testo    di   input       ogni  funzione commentare
multi-processo        con       incolonnato  e impaginato       le  linee  di  codice pi√π
almeno    tre    processi       secondo    i    parametri       importanti;   fornire  un
concorrenti.                    espressi  dall‚Äôutente. Le       makefile   per  compilare
                                pagine    sono   separate       il    progetto   con   un
Dati    in   ingresso   e       dalla   stringa  ‚Äú\n  %%%       semplice   make;  fornire
requisiti:   un  file  di       \n‚Äù;   ogni  paragrafo  √®       un  file  di testo README
testo     in     codifica       separato   da  una  linea       con       una       breve
Unicode           (UTF-8)       vuota;  la  prima colonna       spiegazione    dei   file
contenente  un  testo  in       di  testo  √®  a sinistra;       inclusi    e   un   breve
italiano  strutturato  in       tutte  le  righe,  tranne       manuale     utente;    la
paragrafi   separati   da       l‚Äôultima,     di     ogni       versione   multi-processo
una  o  pi√π  linee  vuote       paragrafo        dovranno       del    programma    dovr√†
(stringa  contenente solo       essere    allineate    ad       essere    costituita   da
il  carattere ‚Äò\n‚Äô). Ogni       entrambi  i margini della       almeno    tre    processi
paragrafo   √®  costituito       colonna;   l‚Äôultima  riga       concorrenti            ed
da  una  o  pi√π  stringhe       di  ogni paragrafo √® solo       intercomunicanti:     uno
terminate   da  ‚Äò\n‚Äô  (il       allineata  a sinistra; le       per  leggere  il  file di
testo   in   ingresso   √®       parole   in   una   linea       ingresso,  uno per creare
tutto    su    una   sola       dovranno  essere separate       le   colonne,  ed  infine

%%%

uno  per la scrittura del       concentratevi       prima       
file      di      output.       sulla   correttezza   dei       
(Ulteriori   suddivisioni       programmi,           cio√®       
del  carico  di lavoro in       assicuratevi    con   pi√π       
pi√π  di tre processi sono       testi   di  input  che  i       
ammesse.)  NON  √® ammesso       programmi   producano  un       
l‚Äôuso     di     librerie       output        incolonnato       
esterne  con funzioni per       secondo  le richieste. Se       
la    manipolazione    di       avete  tempo  alla  fine,       
stringhe  o testo che non       ottimizzate   il   codice       
siano   quelle   standard       per  uso  di CPU e/o RAM,       
del   C.   Eccezione:   √®       mantenendone           la       
ammesso      l‚Äôuso     di       correttezza;       potete       
librerie    esterne   per       usare  wc  per verificare       
l‚Äôanalisi  delle  opzioni       che   il   numero   delle       
della  linea  di  comando       parole  in  ingresso e in       
per il vostro programma.        uscita     dei     vostri       
                                programmi  sia  lo stesso       
Suggerimenti:  usare nomi       (usando  stdin  e  stdout       
di  variabili  e funzioni       nel   vostri   programmi,       
corrispondenti   al  loro       questo  semplice  test si       
significato/utilizzo;           riduce  ad una sola linea       
usare  stdin e stdout per       di       comando      con       
rispettivamente  il testo       l‚Äôoperatore  pipe | della       
in  ingresso e in uscita;       shell).                         
sviluppare    prima    la                                       
versiosne   mono-processo       Il  punteggio  massimo  √®       
del     programma,    poi       6/30,   articolato   come       
quella    multi-processo;       segue:   correttezza  del       
per    l‚Äôanalisi    della       programma         (3/30);       
linea   di   comando   si       architettura          del       
consiglia  getopt, di uso       programma    e   commenti       
molto  semplice  e che fa       (2/30);    usabilit√†    e       
parte  della libreria GNU       istruzioni         utente       
standard      del      C;       (1/30).                         
