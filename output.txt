Sistemi Operativi II Modulo.    caratteri  per  colonna); la    per ogni funzione commentare
Progetto (Homework).            distanza  in  caratteri  tra    brevemente  i  parametri  di
                                una   colonna   di  testo  e    ingresso/uscita   e  il  suo
L’obiettivo  è  implementare    l’altra.                        funzionamento  generale; nel
un programma C che trasformi                                    corpo   di   ogni   funzione
un  testo in italiano da una    Dati  in uscita e requisiti:    commentare   le   linee   di
colonna a più colonne su più    un   file   di  testo  ASCII    codice    più    importanti;
pagine  (come ad es. per una    contenente il testo di input    fornire   un   makefile  per
pagina  di quotidiano). Sono    incolonnato   e   impaginato    compilare il progetto con un
richieste  due  versioni del    secondo i parametri espressi    semplice  make;  fornire  un
programma:   una  a  singolo    dall’utente.  Le pagine sono    file di testo README con una
processo        e        una    separate  dalla  stringa “\n    breve  spiegazione  dei file
multi-processo   con  almeno    %%%  \n”;  ogni  paragrafo è    inclusi  e  un breve manuale
tre processi concorrenti.       separato da una linea vuota;    utente;      la     versione
                                la  prima colonna di testo è    multi-processo del programma
Dati     in    ingresso    e    a  sinistra; tutte le righe,    dovrà  essere  costituita da
requisiti:  un file di testo    tranne   l’ultima,  di  ogni    almeno      tre     processi
in  codifica Unicode (UTF-8)    paragrafo   dovranno  essere    concorrenti               ed
contenente   un   testo   in    allineate   ad   entrambi  i    intercomunicanti:   uno  per
italiano    strutturato   in    margini    della    colonna;    leggere il file di ingresso,
paragrafi  separati da una o    l’ultima    riga   di   ogni    uno  per  creare le colonne,
più   linee  vuote  (stringa    paragrafo è solo allineata a    ed   infine   uno   per   la
contenente solo il carattere    sinistra;  le  parole in una    scrittura    del   file   di
‘\n’).   Ogni   paragrafo  è    linea     dovranno    essere    output.           (Ulteriori
costituito   da  una  o  più    separate    da   almeno   un    suddivisioni  del  carico di
stringhe  terminate  da ‘\n’    carattere   di   spazio;  la    lavoro   in   più   di   tre
(il   testo  in  ingresso  è    sillabazione   di  eventuali    processi  sono ammesse.) NON
tutto  su una sola colonna);    parole  troppo  lunghe non è    è  ammesso l’uso di librerie
il  numero  di  colonne  per    necessaria.                     esterne  con funzioni per la
pagina su cui distribuire il                                    manipolazione  di stringhe o
testo;  il  numero  di linee    Requisiti    generali    del    testo  che  non siano quelle
per  ogni colonna; larghezza    progetto:  ogni  file  .c/.h    standard del C. Eccezione: è
di  ogni  colonna (numero di    dovrà essere ben commentato:    ammesso  l’uso  di  librerie
%%%
esterne  per l’analisi delle    delle  parole  in ingresso e    
opzioni   della   linea   di    in    uscita    dei   vostri    
comando    per   il   vostro    programmi   sia   lo  stesso    
programma.                      (usando  stdin  e stdout nel    
                                vostri   programmi,   questo    
Suggerimenti:  usare nomi di    semplice  test  si riduce ad    
variabili     e     funzioni    una  sola  linea  di comando    
corrispondenti    al    loro    con l’operatore pipe | della    
significato/utilizzo;  usare    shell).                         
stdin     e    stdout    per                                    
rispettivamente  il testo in    Il punteggio massimo è 6/30,    
ingresso    e   in   uscita;    articolato    come    segue:    
sviluppare      prima     la    correttezza   del  programma    
versiosne  mono-processo del    (3/30);   architettura   del    
programma,     poi    quella    programma e commenti (2/30);    
multi-processo;          per    usabilità    e    istruzioni    
l’analisi   della  linea  di    utente (1/30).                  
comando si consiglia getopt,                                    
di  uso molto semplice e che    
fa  parte della libreria GNU    
standard        del       C;    
concentratevi   prima  sulla    
correttezza  dei  programmi,    
cioè  assicuratevi  con  più    
testi   di   input   che   i    
programmi    producano    un    
output  incolonnato  secondo    
le richieste. Se avete tempo    
alla  fine,  ottimizzate  il    
codice  per  uso  di CPU e/o    
RAM,     mantenendone     la    
correttezza; potete usare wc    
per verificare che il numero    
